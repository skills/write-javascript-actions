name: Step 0, Welcome

# This step triggers after the learner creates a new repository from the template.
# This workflow updates from step 0 to step 1.

# When creating a repository from a template, there is variability in the
# order and timing of events that fire and when workflow triggers are registered.
# Given that, these triggers are purposely broad to ensure this workflow is always triggered.
# The conditions within the on_start job are to ensure it is only fully executed once.
# Reference: https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
on:
  create:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  # Get the current step to only run the main job when the learner is on the same step.
  get_current_step:
    name: Check current step number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: get_step
        run: |
          echo "current_step=$(cat ./.github/steps/-step.txt)" >> $GITHUB_OUTPUT
    outputs:
      current_step: ${{ steps.get_step.outputs.current_step }}

  on_start:
    name: On start
    needs: get_current_step

    # We will only run this action when:
    # 1. This repository isn't the template repository.
    # 2. The step is currently 0.
    # Reference: https://docs.github.com/en/actions/learn-github-actions/contexts
    # Reference: https://docs.github.com/en/actions/learn-github-actions/expressions
    if: >-
      ${{ !github.event.repository.is_template
          && needs.get_current_step.outputs.current_step == 0 }}

    # We'll run Ubuntu for performance instead of Mac or Windows.
    runs-on: ubuntu-latest

    steps:
      # We'll need to check out the repository so that we can edit the README.
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Let's get all the branches.

      # This is required to establish labels.
      # after being created from the template repository.
      - name: Prepare labels
        run: |
          echo "Make sure we are on step 0"
          if [ "$(cat .github/steps/-step.txt)" != 0 ]
          then
            echo "Current step is not 0"
            exit 0
          fi
          echo "Create label 1"
          gh label create "first joke" -d "first joke for lab" -f
          echo "Create label 2"
          gh label create "second joke" -d "second joke for lab" -f
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # This is required to create issues.
      # after being created from the template repository.
      - name: Prepare issues
        run: |
          echo "Make sure we are on step 0"
          if [ "$(cat .github/steps/-step.txt)" != 0 ]
          then
            echo "Current step is not 0"
            exit 0
          fi
          echo "Create issue #1 from file"
          gh issue create --title "Create Custom Action" --body "Implement custom action using JavaScript"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Update README from step 0 to step 1.
      - name: Update to step 1
        uses: skills/action-update-step@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          from_step: 0
          to_step: 1
